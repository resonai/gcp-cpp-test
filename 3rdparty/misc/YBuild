

AptPackage(
  'libc-14-dev',
  package='libc++-14-dev',
  deps=[
    #'//3rdparty/apt:llvm-14-repository',
  ],
)

AptPackage(
  'libcabi-14-dev',
  package='libc++abi-14-dev',
  deps=[
    #'//3rdparty/apt:llvm-14-repository',
  ],
)
AptPackage(
  'clang-14',
  package='clang-14',
  deps=[
    #'//3rdparty/apt:llvm-14-repository',
    ':libc-14-dev',
    ':libcabi-14-dev',
  ],
)
CustomInstaller(
  'clang',
  uri='',
  deps=[
    ':clang-14',
  ],
  script='install-llvm.sh',
)


CustomInstaller(
    'protobuf',
    uri='https://github.com/protocolbuffers/protobuf/archive/v3.20.1.tar.gz',
    # TODO(EyalR) move to jfrog/gcs
    script='install-protobuf.sh',
    deps=[
        ':clang'
    ],
    build_params={
        'extra_link_flags': '-lprotobuf',
    },
    license='BSD-3-Clause',
)
CustomInstaller(
    'abseil',
    uri='https://github.com/abseil/abseil-cpp/archive/20211102.0.tar.gz',
    script='install-abseil.sh',
    deps=[
        ':clang',
        ':protobuf',
    ],
  build_params={'extra_link_flags': [
    '-labsl_strings',
    '-labsl_strings_internal',
    '-labsl_str_format_internal',
    '-labsl_synchronization',
    '-labsl_base',
    '-labsl_raw_logging_internal',
    '-labsl_malloc_internal',
    '-labsl_spinlock_wait',
    '-labsl_time',
    '-labsl_time_zone',
    '-labsl_int128',
    '-labsl_stacktrace',
    '-labsl_symbolize',
    '-labsl_debugging_internal',
    '-labsl_demangle_internal',
    '-labsl_status',
    '-labsl_cord',
    '-labsl_hash',
    '-labsl_city',
    '-labsl_flags_usage_internal',
    '-labsl_statusor',
    '-labsl_throw_delegate',
    '-labsl_bad_optional_access',
    '-labsl_bad_variant_access',
    '-labsl_random_seed_sequences',
    '-labsl_random_internal_pool_urbg',
    '-labsl_random_internal_randen',
    '-labsl_random_internal_randen_slow',
    '-labsl_random_internal_randen_hwaes_impl',
    '-labsl_random_internal_randen_hwaes',
    '-labsl_random_internal_platform',
    '-labsl_random_internal_seed_material',
    '-labsl_random_seed_gen_exception',
  ]},
  license='Apache-2.0',
)


CustomInstaller(
    'nlohmann-json',
    uri='https://github.com/nlohmann/json/archive/v3.10.5.tar.gz',
    script='install-nlohmann-json.sh',
    deps=[
      ':clang'
    ],
)

AptPackage(
  'c-ares',
  package='libc-ares-dev'
)

CustomInstaller(
    're2',
    uri='https://github.com/google/re2/archive/2022-04-01.tar.gz',
    script='install-re2.sh',
    deps=[
        ':clang',
        ':protobuf',
    ],
  build_params={'extra_link_flags': ['-lre2', '-lgpr', '-lupb', '-laddress_sorting']},
  license='Apache-2.0',
)

CustomInstaller(
    'grpc',
    uri='https://github.com/grpc/grpc/archive/v1.46.3.tar.gz',
    script='install-grpc.sh',
    deps=[
        ':clang',
        ':protobuf',
        ':abseil',
        ':re2',
    ],
    build_params={'extra_link_flags': ['-lgrpc++', '-lgrpc']},
  license='Apache-2.0',
)
CustomInstaller(
    'crc32',
    uri='https://github.com/google/crc32c/archive/1.1.2.tar.gz',
    # TODO(EyalR) move to jfrog
    script='install-crc32.sh',
    deps=[
        ':clang'
    ],
    build_params={
        'extra_link_flags': '-lcrc32c',
    },
    license='BSD-3-Clause',
    # WARNING this is not the license, they just say it is "BSD-style"
)

CustomInstaller(
    'google-cloud-cpp',
    uri='https://github.com/googleapis/google-cloud-cpp/archive/v1.40.2.tar.gz',
    script='install-google-cloud-cpp.sh',
    deps=[
      ':clang',
      ':abseil',
      ':grpc',
      ':protobuf',
      ':crc32',
      ':nlohmann-json',
    ],
    # generated with pkg-config google_cloud_cpp_storage --libs
    build_params={'extra_link_flags': ['-lgoogle_cloud_cpp_storage',
                                       '-lcrc32c',
                                       '-lgoogle_cloud_cpp_common',
                                       '-labsl_bad_optional_access',
                                       '-lcurl',
                                       '-lssl',
                                       '-lcrypto',
                                       '-labsl_str_format_internal',
                                       '-labsl_time',
                                       '-labsl_civil_time',
                                       '-labsl_strings',
                                       '-labsl_strings_internal',
                                       '-lrt',
                                       '-labsl_base',
                                       '-labsl_spinlock_wait',
                                       '-labsl_int128',
                                       '-labsl_throw_delegate',
                                       '-labsl_time_zone',
                                       '-labsl_bad_variant_access',
                                       '-labsl_raw_logging_internal',
                                       '-labsl_log_severity']}
)
